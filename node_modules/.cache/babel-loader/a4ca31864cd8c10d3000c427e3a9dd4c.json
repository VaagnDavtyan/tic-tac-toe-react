{"ast":null,"code":"var _jsxFileName = \"/Users/vaagndavtyan/Desktop/tic/src/components/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../helper';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber]);\n  const xO = xIsNext ? 'X' : 'O';\n\n  const handleClick = i => {\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current];\n    if (winner || squares[i]) return;\n    squares[i] = xO;\n    setHistory([...historyPoint, squares]);\n    setStepNumber(historyPoint.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n\n  const renderMoves = () => history.map((_step, move) => {\n    const destination = move ? `Go to move #${move}` : 'Go to Start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 28\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Let's Play \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this), \"React Tic-Tac-Toe \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"winnermonitor\",\n        children: winner ? 'Winner: ' + winner : 'Next Player: ' + xO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), renderMoves()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: history[stepNumber],\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info=wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Game, \"V3+a/ZTmkvRnT4Btg7cxhfZdpO4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/vaagndavtyan/Desktop/tic/src/components/Game.jsx"],"names":["React","useState","calculateWinner","Board","Game","history","setHistory","Array","fill","stepNumber","setStepNumber","xIsNext","setXisNext","winner","xO","handleClick","i","historyPoint","slice","current","squares","length","jumpTo","step","renderMoves","map","_step","move","destination"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAD,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,MAAM,GAAGX,eAAe,CAACG,OAAO,CAACI,UAAD,CAAR,CAA9B;AACA,QAAMK,EAAE,GAAGH,OAAO,GAAG,GAAH,GAAS,GAA3B;;AACA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACvB,UAAMC,YAAY,GAAGZ,OAAO,CAACa,KAAR,CAAc,CAAd,EAAiBT,UAAU,GAAG,CAA9B,CAArB;AACA,UAAMU,OAAO,GAAGF,YAAY,CAACR,UAAD,CAA5B;AACA,UAAMW,OAAO,GAAG,CAAC,GAAGD,OAAJ,CAAhB;AAEA,QAAGN,MAAM,IAAIO,OAAO,CAACJ,CAAD,CAApB,EAAyB;AAEzBI,IAAAA,OAAO,CAACJ,CAAD,CAAP,GAAaF,EAAb;AACAR,IAAAA,UAAU,CAAC,CAAC,GAAGW,YAAJ,EAAkBG,OAAlB,CAAD,CAAV;AACAV,IAAAA,aAAa,CAACO,YAAY,CAACI,MAAd,CAAb;AACAT,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAXD;;AAYJ,QAAMW,MAAM,GAAIC,IAAD,IAAU;AACrBb,IAAAA,aAAa,CAACa,IAAD,CAAb;AACAX,IAAAA,UAAU,CAACW,IAAI,GAAG,CAAP,KAAa,CAAd,CAAV;AACH,GAHD;;AAKI,QAAMC,WAAW,GAAE,MACnBnB,OAAO,CAACoB,GAAR,CAAY,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzB,UAAMC,WAAW,GAAGD,IAAI,GAAI,eAAcA,IAAK,EAAvB,GAA2B,aAAnD;AACA,wBACI;AAAA,6BAAe;AAAQ,QAAA,OAAO,EAAE,MAAML,MAAM,CAACK,IAAD,CAA7B;AAAA,kBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAf,OAASD,IAAT;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GALD,CADA;;AAUA,sBACI;AAAA,4BACR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACA;AAAA,+CAAe;AAAA;AAAA;AAAA;AAAA,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEQ;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+Bd,MAAM,GAAG,aAAaA,MAAhB,GAAyB,kBAAkBC;AAAhF;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,EAIaU,WAAW,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,eAQA,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEnB,OAAO,CAACI,UAAD,CAAvB;AAAqC,MAAA,OAAO,EAAEM;AAA9C;AAAA;AAAA;AAAA;AAAA,YARA,eASA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADJ;AAgBH,CAjDD;;GAAMX,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { calculateWinner } from '../helper';\nimport Board from './Board';\n\nconst Game = () => {\n    const [history, setHistory] = useState([Array(9).fill(null)])\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n    const xO = xIsNext ? 'X' : 'O';\n    const handleClick = (i) => {\n        const historyPoint = history.slice(0, stepNumber + 1);\n        const current = historyPoint[stepNumber];\n        const squares = [...current];\n     \n        if(winner || squares[i]) return;\n\n        squares[i] = xO;\n        setHistory([...historyPoint, squares]);\n        setStepNumber(historyPoint.length);\n        setXisNext(!xIsNext);\n    };\nconst jumpTo = (step) => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n};\n\n    const renderMoves =() => \n    history.map((_step, move) => {\n        const destination = move ? `Go to move #${move}` : 'Go to Start';\n        return (\n            <li key={move}><button onClick={() => jumpTo(move)}>{destination}</button></li>\n        );\n    });\n\n\n\n    return (\n        <>\n<div className='header'>\n<h1>Let's Play <br/>React Tic-Tac-Toe </h1>\n        <h2 className='winnermonitor'>{winner ? 'Winner: ' + winner : 'Next Player: ' + xO}</h2>\n        <h1>History</h1>\n            {renderMoves()}\n</div>\n       \n        <Board squares={history[stepNumber]} onClick={handleClick} />\n        <div className='info=wrapper'>\n          \n            \n        </div>\n        </>\n    );\n};\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}